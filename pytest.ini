[pytest]
# PyTestSuite Pro Test Configuration

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test* *Test
python_functions = test_*

# Test directory paths
testpaths = tests

# Markers for test categorization
markers =
    smoke: Quick smoke tests for critical functionality
    regression: Full regression test suite
    critical: Critical business functionality tests
    high: High priority test cases
    medium: Medium priority test cases
    low: Low priority test cases
    ui: User interface tests
    api: API endpoint tests
    integration: Integration tests
    database: Database-related tests
    performance: Performance and load tests
    security: Security-focused tests
    cross_browser: Cross-browser compatibility tests
    mobile: Mobile-specific tests
    slow: Tests that take longer to execute
    fast: Quick executing tests
    flaky: Tests that may occasionally fail
    skip_parallel: Tests that should not run in parallel
    test_data: Fixture or data-driven tests

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = reports/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d: %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# HTML Report configuration
addopts = 
    --html=reports/report.html 
    --self-contained-html
    --capture=tee-sys
    --strict-markers
    --tb=short
    -v

# Parallel execution settings
# Use with: pytest -n auto or pytest -n <number_of_workers>
# For distributed testing: pytest --dist=loadscope

# Test timeout configuration
# Use pytest-timeout plugin if needed: pip install pytest-timeout
# Then uncomment and configure:
# timeout = 300
# timeout_method = thread

# Minimum Python version
minversion = 3.8